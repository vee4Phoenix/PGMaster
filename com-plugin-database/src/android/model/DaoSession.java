package com.plugin.database.model;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.plugin.database.model.Diary;
import com.plugin.database.model.Photo;
import com.plugin.database.model.Reflection;

import com.plugin.database.model.DiaryDao;
import com.plugin.database.model.PhotoDao;
import com.plugin.database.model.ReflectionDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 *
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig diaryDaoConfig;
    private final DaoConfig photoDaoConfig;
    private final DaoConfig reflectionDaoConfig;

    private final DiaryDao diaryDao;
    private final PhotoDao photoDao;
    private final ReflectionDao reflectionDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        diaryDaoConfig = daoConfigMap.get(DiaryDao.class).clone();
        diaryDaoConfig.initIdentityScope(type);

        photoDaoConfig = daoConfigMap.get(PhotoDao.class).clone();
        photoDaoConfig.initIdentityScope(type);

        reflectionDaoConfig = daoConfigMap.get(ReflectionDao.class).clone();
        reflectionDaoConfig.initIdentityScope(type);

        diaryDao = new DiaryDao(diaryDaoConfig, this);
        photoDao = new PhotoDao(photoDaoConfig, this);
        reflectionDao = new ReflectionDao(reflectionDaoConfig, this);

        registerDao(Diary.class, diaryDao);
        registerDao(Photo.class, photoDao);
        registerDao(Reflection.class, reflectionDao);
    }

    public void clear() {
        diaryDaoConfig.getIdentityScope().clear();
        photoDaoConfig.getIdentityScope().clear();
        reflectionDaoConfig.getIdentityScope().clear();
    }

    public DiaryDao getDiaryDao() {
        return diaryDao;
    }

    public PhotoDao getPhotoDao() {
        return photoDao;
    }

    public ReflectionDao getReflectionDao() {
        return reflectionDao;
    }

}
