package com.plugin.database.model;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
import com.plugin.database.helper.JSONSerializable;

import org.json.JSONException;
import org.json.JSONObject;
// KEEP INCLUDES END
/**
 * Entity mapped to table REFLECTION.
 */
public class Reflection implements JSONSerializable {

    private Long id;
    private Integer order;
    private Integer sectionNumber;
    private String text;

    // KEEP FIELDS - put your custom fields here
    public static final String ID       = "id";
   	private final String Text		        = "text";
   	private final String SectionNumber 	= "sectionNumber";
   	private final String Order          = "order";
    // KEEP FIELDS END

    public Reflection() {
    }

    public Reflection(Long id) {
        this.id = id;
    }

    public Reflection(Long id, Integer order, Integer sectionNumber, String text) {
        this.id = id;
        this.order = order;
        this.sectionNumber = sectionNumber;
        this.text = text;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Integer getOrder() {
        return order;
    }

    public void setOrder(Integer order) {
        this.order = order;
    }

    public Integer getSectionNumber() {
        return sectionNumber;
    }

    public void setSectionNumber(Integer sectionNumber) {
        this.sectionNumber = sectionNumber;
    }

    public String getText() {
        return text;
    }

    public void setText(String text) {
        this.text = text;
    }

    // KEEP METHODS - put your custom methods here
    public Reflection(JSONObject jsonObject) {
  		setAttributes(jsonObject);
  	}

  	@Override
  	public void setAttributes(JSONObject jsonObject) {
      this.text = jsonObject.optString(Text);
      this.sectionNumber = jsonObject.optInt(SectionNumber);
      this.order = jsonObject.optInt(Order);
  	}

  	@Override
  	public JSONObject toJSONObject() {
  		JSONObject obj = new JSONObject();
  		try {
  			obj.putOpt(ID, this.id);
  			obj.putOpt(Text, this.text);
  			obj.putOpt(SectionNumber, this.sectionNumber);
  			obj.putOpt(Order, this.order);
  		} catch (JSONException e) {
  			e.printStackTrace();
  		}
  		return obj;
  	}

  	public String toString() {
  		return toJSONObject().toString();
  	}
    // KEEP METHODS END

}
